{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,a,WAAAA,a;AAET,2BAAYC,UAAZ,EAAuB;AAAA;;AAEnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAEhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;AAGAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAbM,CAAP;AAcH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;;AAEpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAGD,KAAH,EAAS;AACL,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,2BAAeF,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,8BAAMQ,QAAN;AACH,qBAJD,MAIK;AACDxB,gCAAQe,WAAR;AACH;AACJ,iBAXD;;AAaAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yBAAP;AACH,iBAHD;AAIH,aAzBM,CAAP;AA0BH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;AACAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAXM,CAAP;AAYH","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from '..//models/Negociacao';\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negociacao');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if(atual){\r\n                    var dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                }else{\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível listar');\r\n            };\r\n        }) \r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações removidas com sucesso');\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível apagar as negociações');\r\n            }\r\n        })\r\n    }\r\n}"]}