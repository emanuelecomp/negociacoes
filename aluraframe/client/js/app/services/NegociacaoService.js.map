{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","Promise","resolve","reject","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","Error","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;IAGaA,iB,WAAAA,iB;AAET,iCAAc;AAAA;;AAEV,aAAKC,KAAL,GAAa,8BAAb;AACH;;;;mDAE0B;AAAA;;AAExB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEnC,sBAAKH,KAAL,CACKI,GADL,CACS,oBADT,EAEKC,IAFL,CAEU,uBAAe;AACjBC,4BAAQC,GAAR,CAAYC,WAAZ;AACAN,4BAAQM,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,2BAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,qBAAhB,CAAR;AACH,iBALL,EAMKC,KANL,CAMW,gBAAQ;AACXT,4BAAQC,GAAR,CAAYS,IAAZ;AACAb,2BAAO,iDAAP;AACH,iBATL;AAUJ,aAZM,CAAP;AAaF;;;2DAEkC;AAAA;;AAEhC,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEnC,uBAAKH,KAAL,CACKI,GADL,CACS,sBADT,EAEKC,IAFL,CAEU,uBAAe;AACjBC,4BAAQC,GAAR,CAAYC,WAAZ;AACAN,4BAAQM,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,2BAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,qBAAhB,CAAR;AACH,iBALL,EAMKC,KANL,CAMW,gBAAQ;AACXT,4BAAQC,GAAR,CAAYS,IAAZ;AACAb,2BAAO,0DAAP;AACH,iBATL;AAUJ,aAZM,CAAP;AAeF;;;4DAEmC;AAAA;;AAEjC,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEnC,uBAAKH,KAAL,CACKI,GADL,CACS,uBADT,EAEKC,IAFL,CAEU,uBAAe;AACjBC,4BAAQC,GAAR,CAAYC,WAAZ;AACAN,4BAAQM,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,2BAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,qBAAhB,CAAR;AACH,iBALL,EAMKC,KANL,CAMW,gBAAQ;AACXT,4BAAQC,GAAR,CAAYS,IAAZ;AACAb,2BAAO,2DAAP;AACH,iBATL;AAUJ,aAZM,CAAP;AAaF;;;2CAGkB;AAAA;;AAEf,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpCF,wBAAQgB,GAAR,CAAY,CACR,OAAKC,wBAAL,EADQ,EAER,OAAKC,gCAAL,EAFQ,EAGR,OAAKC,iCAAL,EAHQ,CAAZ,EAIGf,IAJH,CAIQ,oBAAY;;AAEhB,wBAAIG,cAAca,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,+BAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,qBADM,EACqC,EADrC,EAEbf,GAFa,CAET;AAAA,+BAAQ,2BAAe,IAAIC,IAAJ,CAASgB,KAAKd,IAAd,CAAf,EAAoCc,KAAKb,UAAzC,EAAqDa,KAAKZ,KAA1D,CAAR;AAAA,qBAFS,CAAlB;;AAIAZ,4BAAQM,WAAR;AAEH,iBAZD,EAYGO,KAZH,CAYS;AAAA,2BAAQZ,OAAOa,IAAP,CAAR;AAAA,iBAZT;AAaH,aAfM,CAAP;AAgBH;;;iCAEQW,U,EAAW;AAChB,mBAAO,qCAAkBC,aAAlB,GACNvB,IADM,CACD;AAAA,uBAAc,iCAAkBwB,UAAlB,CAAd;AAAA,aADC,EAENxB,IAFM,CAED;AAAA,uBAAOyB,IAAIC,QAAJ,CAAaJ,UAAb,CAAP;AAAA,aAFC,EAGNtB,IAHM,CAGD;AAAA,uBAAM,mCAAN;AAAA,aAHC,EAINU,KAJM,CAIA,YAAM;AAAC,sBAAM,IAAIiB,KAAJ,CAAU,yCAAV,CAAN;AAA2D,aAJlE,CAAP;AAMH;;;gCAEO;;AAEF,mBAAO,qCACEJ,aADF,GAEEvB,IAFF,CAEO;AAAA,uBAAc,iCAAkBwB,UAAlB,CAAd;AAAA,aAFP,EAGExB,IAHF,CAGO;AAAA,uBAAOyB,IAAIG,UAAJ,EAAP;AAAA,aAHP,EAIElB,KAJF,CAIQ,gBAAQ;AACXT,wBAAQC,GAAR,CAAYS,IAAZ;AACA,sBAAM,IAAIgB,KAAJ,CAAU,uCAAV,CAAN;AACD,aAPJ,CAAP;AAQD;;;gCAEE;;AAEH,mBAAO,qCACFJ,aADE,GAEFvB,IAFE,CAEG;AAAA,uBAAc,iCAAkBwB,UAAlB,CAAd;AAAA,aAFH,EAGFxB,IAHE,CAGG;AAAA,uBAAOyB,IAAII,UAAJ,EAAP;AAAA,aAHH,EAIF7B,IAJE,CAIG;AAAA,uBAAK,kCAAL;AAAA,aAJH,EAKFU,KALE,CAKI,gBAAQ;AACXT,wBAAQC,GAAR,CAAYS,IAAZ;AACA,sBAAM,IAAIgB,KAAJ,CAAU,uCAAV,CAAN;AACH,aARE,CAAP;AASH;;;gCAEOG,U,EAAW;;AAEf,mBAAO,KAAKC,gBAAL,GACN/B,IADM,CACD;AAAA,uBAAeG,YAAY6B,MAAZ,CAAmB;AAAA,2BACpC,CAACF,WAAWG,IAAX,CAAgB;AAAA,+BACbC,KAAKC,SAAL,CAAeb,UAAf,KAA8BY,KAAKC,SAAL,CAAeC,mBAAf,CADjB;AAAA,qBAAhB,CADmC;AAAA,iBAAnB,CAAf;AAAA,aADC,EAML1B,KANK,CAMC,gBAAQ;AACZT,wBAAQC,GAAR,CAAYS,IAAZ;AACA,sBAAM,IAAIgB,KAAJ,CAAU,wCAAV,CAAN;AACH,aATM,CAAP;AAYH","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\nimport { Negociacao } from '..//models/Negociacao';\n\n\nexport class NegociacaoService {\n    \n    constructor() {\n        \n        this._http = new HttpService();\n    }\n    \n    obterNegociacoesDaSemana() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                });  \n       });        \n    }\n    \n    obterNegociacoesDaSemanaAnterior() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });  \n       }); \n       \n        \n    }\n    \n    obterNegociacoesDaSemanaRetrasada() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                });  \n       }); \n    }    \n    \n    \n    obterNegociacoes() {\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ]).then(periodos => {\n\n                let negociacoes = periodos\n                    .reduce((dados, periodo) => dados.concat(periodo), [])\n                    .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n                resolve(negociacoes);\n\n            }).catch(erro => reject(erro));\n        });\n    }\n    \n    cadastra(negociacao){\n        return ConnectionFactory.getConnection()\n        .then(connection => new NegociacaoDao(connection))\n        .then(dao => dao.adiciona(negociacao)) \n        .then(() => 'Negociacao adicionada com sucesso')\n        .catch(() => {throw new Error('Não foi possível adicionar a negociação')});      \n              \n    }\n\n    lista() {\n        \n          return ConnectionFactory\n                  .getConnection()\n                  .then(connection => new NegociacaoDao(connection))\n                  .then(dao => dao.listaTodos())\n                  .catch(erro => {\n                      console.log(erro);\n                      throw new Error('Não foi possível obter as negociações')\n                    })\n        }\n\n    apaga(){\n        \n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(()=> 'Negociacoes apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações');\n            })\n    }\n\n    importa(listaAtual){\n\n        return this.obterNegociacoes()\n        .then(negociacoes => negociacoes.filter(negociacao => \n            !listaAtual.some(negociacaoExistente =>\n                JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)\n                )\n            )\n        ).catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível buscar as negociações');\n        })\n         \n        \n    }\n}\n\n"]}